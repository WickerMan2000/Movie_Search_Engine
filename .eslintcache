[{"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\Search.js":"3","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\store\\InputContextProvider.js":"4","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\store\\InputContext.js":"5","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\MoviesList.js":"6","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\Movie.js":"7","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\MoviePage.js":"8","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\UI\\Spinner.js":"9"},{"size":377,"mtime":1628355700598,"results":"10","hashOfConfig":"11"},{"size":738,"mtime":1628440452340,"results":"12","hashOfConfig":"11"},{"size":2633,"mtime":1628514442935,"results":"13","hashOfConfig":"11"},{"size":766,"mtime":1628518289265,"results":"14","hashOfConfig":"11"},{"size":194,"mtime":1628518237686,"results":"15","hashOfConfig":"11"},{"size":690,"mtime":1628523172525,"results":"16","hashOfConfig":"11"},{"size":463,"mtime":1628518207758,"results":"17","hashOfConfig":"11"},{"size":2616,"mtime":1628526059324,"results":"18","hashOfConfig":"11"},{"size":215,"mtime":1628440680713,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1m0beoy",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\index.js",[],["40","41"],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\App.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\Search.js",["42","43","44","45"],"import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport InputContext from '../store/InputContext';\r\nimport styles from './Search.module.css';\r\n\r\nconst setTimer = duration => {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, duration);\r\n    })\r\n}\r\n\r\nconst errorCatchingFunction = errorFunction => fn => () => fn().catch(err => errorFunction(err.message));\r\n\r\nconst Search = React.memo(({ sendTypingState }) => {\r\n    const { movies: { allMovies, inputMovie }, dispatch } = useContext(InputContext);\r\n    const [searchingMovie, setSearchingMovie] = useState(inputMovie);\r\n    const [movies, setMovies] = useState(allMovies);\r\n    const [typing, setTyping] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [_, setError] = useState(null);\r\n    const searchingMovieRef = useRef('');\r\n\r\n    const searchingForAMovie = event => {\r\n        const { value } = event.target;\r\n        searchingMovieRef.current = value;\r\n        setSearchingMovie(value);\r\n        setTyping(true);\r\n        setMessage('');\r\n    }\r\n\r\n    const getSearchingResult = useCallback(errorCatchingFunction(setError)(async () => {\r\n        const allMovies = [];\r\n        await setTimer(1000);\r\n        if (searchingMovieRef.current === searchingMovie) {\r\n            const response = await fetch(`http://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${searchingMovieRef.current.trim()}`);\r\n            const data = await response.json();\r\n            if (data.Response === 'True') {\r\n                Object.values(data).forEach(element => Array.isArray(element) && element.forEach(movie => allMovies.push(movie)));\r\n                setMessage('');\r\n                setMovies(allMovies);\r\n            } else {\r\n                setMovies([]);\r\n                setMessage(data.Error);\r\n            }\r\n            setTyping(false);\r\n        }\r\n    }), [searchingMovie, typing]);\r\n\r\n    useEffect(() => {\r\n        getSearchingResult();\r\n        sendTypingState(typing);\r\n    }, [getSearchingResult, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'GET_ALL_MOVIES', movies: { allMovies: movies, inputMovie: searchingMovie, warning: message } });\r\n    }, [movies, message, dispatch]);\r\n\r\n    return (\r\n        <div className={styles.Search}>\r\n            <input\r\n                type=\"text\"\r\n                value={searchingMovie}\r\n                ref={searchingMovieRef}\r\n                className={styles.Input}\r\n                onChange={searchingForAMovie}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Search;","C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\store\\InputContextProvider.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\store\\InputContext.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\MoviesList.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\Movie.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\components\\MoviePage.js",[],"C:\\Users\\Dell\\Desktop\\Front-End\\Movie_Search\\src\\UI\\Spinner.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":21,"column":12,"nodeType":"52","messageId":"53","endLine":21,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":32,"column":32,"nodeType":"52","endLine":32,"endColumn":43},{"ruleId":"54","severity":1,"message":"56","line":53,"column":8,"nodeType":"57","endLine":53,"endColumn":38,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"59","line":57,"column":8,"nodeType":"57","endLine":57,"endColumn":35,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'sendTypingState' and 'typing'. Either include them or remove the dependency array. If 'sendTypingState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'searchingMovie'. Either include it or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [getSearchingResult, dispatch, sendTypingState, typing]",{"range":"69","text":"70"},"Update the dependencies array to be: [movies, message, dispatch, searchingMovie]",{"range":"71","text":"72"},[2068,2098],"[getSearchingResult, dispatch, sendTypingState, typing]",[2258,2285],"[movies, message, dispatch, searchingMovie]"]